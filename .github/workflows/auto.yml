name: CI Pipeline

on:
  push:
  schedule:
    - cron: '0 1 * * *'  # 每天早上 9 点触发一次

jobs:
  run-newman-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        collection: [openapijs, github]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16" # newman: 需要 node 版本 >=16

      - name: Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-html

      # 使用Newman执行多个collection文件
      - name: Run Postman collection
        run: |
          # newman run apiFiles/${{ matrix.collection }}.postman_collection.json -e apiFiles/${{ matrix.collection }}.postman_environment.json -r json,html --reporter-json-export output-${{ matrix.collection }}.json --reporter-html-export output-${{ matrix.collection }}.html
          #!/bin/bash

          MAX_RETRIES=3  # 最大重试次数
          RETRY_COUNT=0  # 当前重试次数
          TIMEOUT=10     # 超时时间，单位秒
          SUCCESS=0       # 0 表示失败，1 表示成功

          while [ $RETRY_COUNT -lt $MAX_RETRIES ]
          do
              # 使用 timeout 命令来限制 newman 的最大运行时间
              timeout $TIMEOUT newman run apiFiles/${{ matrix.collection }}.postman_collection.json \
                  -e apiFiles/${{ matrix.collection }}.postman_environment.json \
                  -r json,html \
                  --reporter-json-export output-${{ matrix.collection }}.json \
                  --reporter-html-export output-${{ matrix.collection }}.html

              # 获取上一个命令的退出状态码
              EXIT_CODE=$?
              
              if [ $EXIT_CODE -eq 0 ]; then
                  SUCCESS=1
                  break
              elif [ $EXIT_CODE -eq 124 ]; then
                  # timeout 命令的退出状态码是 124，表示超时
                  RETRY_COUNT=$((RETRY_COUNT + 1))
                  echo "Attempt $RETRY_COUNT failed due to timeout. Retrying..."
              else
                  # 其他错误类型
                  RETRY_COUNT=$((RETRY_COUNT + 1))
                  echo "Attempt $RETRY_COUNT failed with error code $EXIT_CODE. Retrying..."
              fi

              # 设置每次重试之间的延迟时间，避免过度频繁执行
              sleep 2
          done

          if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "Test failed after $MAX_RETRIES retries due to timeout or errors."
              exit 1  # 达到最大重试次数后退出并返回错误码
          else
              echo "Test succeeded."
              exit 0  # 成功时返回0
          fi

      # 生成的文件
      - name: Upload Postman report artifacts
        uses: actions/upload-artifact@v4
        with:
          name: postman-reports-${{ matrix.collection }} # 给每个集合生成不同的artifact名称
          path: |
            output-${{ matrix.collection }}.json
            output-${{ matrix.collection }}.html
  send-email-success:
    runs-on: ubuntu-latest
    needs: run-newman-tests  # 表示这个作业依赖于 run-newman-tests 作业
    if: success()
    steps:
      # 发送邮件
      - name: Send email on success
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.qq.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}  # 从 Secrets 中读取 QQ 邮箱地址
          password: ${{ secrets.EMAIL_PASSWORD }}  # 从 Secrets 中读取授权码
          from: ${{ secrets.EMAIL_USERNAME }}  # 发件人邮箱地址
          to: ${{ secrets.EMAIL_USERNAME }}   # 收件人邮箱地址
          subject: "每日测试运行成功"
          body: |
            测试成功，请查看以下链接获取详细信息：
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          secure: true  # 使用 SSL/TLS

  send-email-failure:
    runs-on: ubuntu-latest
    needs: run-newman-tests  # 表示这个作业依赖于 run-newman-tests 作业
    if: failure()
    steps:
      - name: Send email on failure
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.qq.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}  # 从 Secrets 中读取 QQ 邮箱地址
          password: ${{ secrets.EMAIL_PASSWORD }}  # 从 Secrets 中读取授权码
          from: ${{ secrets.EMAIL_USERNAME }}  # 发件人邮箱地址
          to: ${{ secrets.EMAIL_USERNAME }}   # 收件人邮箱地址
          subject: "每日测试运行失败"
          body: |
            测试失败，请查看以下链接获取详细信息：
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          secure: true  # 使用 SSL/TLS
